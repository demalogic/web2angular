(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> dictionary update sequence element #0 has length 0; 2 is required"
p3
sS'layer'
p4
S'/Users/nihil/PycharmProjects/untitled/web2py/applications/ang2py/controllers/plugin_angular.py'
p5
sS'code'
p6
S'__author__ = \'nihil\'\n\nfrom plugin_angular import jsoned, Message\nfrom operator import isSequenceType\nfrom itertools import chain, imap\n\ndef serialize_valdator(validator):\n    """\n    Serialize a validator in AngularJS way\n    :param validator:\n    :return: iterator of couple of\n    """\n    return ()\n\n@jsoned\ndef model():\n    if not request.args:\n        raise Message(\'you have to specify a model like by /%s/plugin_angular/model/<model_name>\' % request.application)\n    if not request.args[0] in db:\n        raise Message(\'model %s not found on %s application\' % (request.args[0],request.application))\n    model = db[request.args[0]]\n    return dict((field.name,dict(\n        name = field.label,\n        validators = dict(chain(imap(serialize_valdator,field.requires if isSequenceType(field.requires) else [field.requires]))),\n        comment = field.comment,\n        readable = field.readable,\n        writable = field.writable,\n        type = field.type,\n        w2pwidget = field.widget,\n    )) for field in (\n        getattr(model,field)\n        for field in model.fields\n    ))\n\nresponse._vars=response._caller(model)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/nihil/PycharmProjects/untitled/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/Users/nihil/PycharmProjects/untitled/web2py/applications/ang2py/controllers/plugin_angular.py", line 35, in <module>\n  File "/Users/nihil/PycharmProjects/untitled/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "applications/ang2py/modules/plugin_angular.py", line 30, in x\n    raise e\nValueError: dictionary update sequence element #0 has length 0; 2 is required\n'
p11
s.